name: on-feature-push
run-name: on-feature-push
on:
  push:
    branches:
      - 'feat-**'
jobs:

  editorconfig:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  php-check-syntax:
    needs: editorconfig
    runs-on:  ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Run PHP lint
        uses: StephaneBour/actions-php-lint@8.2
        with:
          dir: './src'

  # secret-checker:
  #   needs: [editorconfig]
  #   runs-on: ubuntu-latest
  #   name: Vulnerabilities check
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2
  #     - name: Check for vulnerabilities
  #       id: checks
  #       uses: maddygoround/secretduty@v1.3
  #       with:
  #         severity: "['CRITICAL','MAJOR']"
  #     - name: Get results of scan
  #       run: echo "Scan Results - ${{ steps.checks.outputs.result }}"

  gitleaks-scan:
    needs: editorconfig
    name: gitleaks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
#         GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE}} # Only required for Organizations, not personal accounts

  sonarcloud:
    needs: editorconfig
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clone is recommended for improving relevancy of reporting
        fetch-depth: 0
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  # snyk-check:
  #   needs: editorconfig
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Run Snyk to check for vulnerabilities
  #       uses: snyk/actions/php@master
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --severity-threshold=high
