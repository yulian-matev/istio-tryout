name: Verify after each push
run-name: Verify after each push
on: [push]
jobs:

  editorconfig:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: editorconfig-checker/action-editorconfig-checker@main
      - run: editorconfig-checker

  code-checker-black:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
      - uses: rickstaa/action-black@v1
        with:
          black_args: ". --check"

  php-check-syntax:
    needs: editorconfig
    runs-on:  ubuntu-20.04
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Run PHP lint
        uses: StephaneBour/actions-php-lint@8.2
        with:
          dir: './src'

  markdown-checker:
    needs: editorconfig
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Run marksown checker
        uses: DavidAnson/markdownlint-cli2-action@v13
        with:
          config: './.github/.markdownlint.yml'
          globs: '**/*.md'

  build-docker-image:
    needs: [editorconfig,php-check-syntax]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      -
        name: Calculate docker image tag
        id: docker-img-tag
        run: |
          USER_VERSION=$(perl -n -e'/"SERVICE_VER",\s+.*"(.*)"/ && print $1' ./src/micro-svc/php/api.php)
          MY_TAG=${GITHUB_RUN_NUMBER}-${USER_VERSION}-${GITHUB_SHA::6}
          echo "Calculate docker image tag: ${MY_TAG}"
          echo "MY_IMG_TAG=${MY_TAG}" >> $GITHUB_OUTPUT

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: Preliminary build of docker image
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:src/blue-svc/nginx"
          load: true
          push: false
          tags: "blue-svc-nginx:pre-image"

      -
        name: Run Trivy vulnerability scanner on 'pre-image'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'blue-svc-nginx:pre-image'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      -
        name: Build docker and Push
        uses: docker/build-push-action@v5
        with:
          context: "{{defaultContext}}:src/blue-svc/nginx"
          push: true
          tags: "ymatev/blue-svc-nginx:${{ steps.docker-img-tag.outputs.MY_IMG_TAG }}"
